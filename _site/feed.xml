<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scorpio 博客</title>
    <description>One or more sentences introducing this blog.
</description>
    <link>http://www.pisces.ml/</link>
    <atom:link href="http://www.pisces.ml/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 24 Jun 2016 11:54:42 +0800</pubDate>
    <lastBuildDate>Fri, 24 Jun 2016 11:54:42 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Keystone对接ActiveDirectory</title>
        <description>&lt;p&gt;keystone对接AD(ActiveDirectory)，本文记录对接配置过程&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;简介&lt;/h2&gt;

&lt;p&gt;AD，指Windows的Active Directory，是LDAP协议的另一个实现，Keystone也可以和AD进行对接。&lt;/p&gt;

&lt;h2 id=&quot;ad&quot;&gt;AD服务安装配置&lt;/h2&gt;

&lt;p&gt;首先我们需要配置好AD，以用来对接keystone。&lt;/p&gt;

&lt;h3 id=&quot;ad-1&quot;&gt;安装AD服务&lt;/h3&gt;

&lt;p&gt;在window server 中安装AD服务，该过程可参考（https://support.rackspace.com/how-to/installing-active-directory-on-windows-server-2012/）这里不再细说。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;数据初始化&lt;/h3&gt;

&lt;p&gt;AD服务安装完成后会生成Users的容器，该容器存放用户的分组以及用户。如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.pisces.ml/images/image2016-5-23-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当然对于keystone我们也可以使用这种模式，将用户和分组同时都放在容器Users中，但是这样做会显的很乱。一种做法是我们可以单独给用户生成一个类似的容器来存放所有用户信息，也给分组生成一个容器来存放所有分组(当然也可以根据客户现在的账户体系进行规划，这里只做示例用)，如下步骤所示分别建立两个容器来存放用户和分组：&lt;/p&gt;

&lt;p&gt;第一步：在根目录ustack下点击新建，容器类型为‘组织单位’&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.pisces.ml/images/image2016-5-23-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第二步：生成Keystone_Users容器&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.pisces.ml/images/image2016-5-23-3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;同样的方式创建容器Keystone_Groups来存放分组，新建完成后如下所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.pisces.ml/images/mage2016-5-23-4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;完成之后我们需要在容器Keystone_Users和Keystone_Groups中分别创建用户和分组，示例（在Keystone_Users新建用户）：
进入容器Keystone_Users，右击新建－用户，填上必要的用户信息确认即可，如下图所示&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.pisces.ml/images/image2016-5-23-5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;同样的方式可以建立相应的分组，并将用户添加到该分组中。&lt;/p&gt;

&lt;h2 id=&quot;keystone&quot;&gt;keystone的安装和配置&lt;/h2&gt;

&lt;h3 id=&quot;keysotne&quot;&gt;keysotne安装&lt;/h3&gt;

&lt;p&gt;keystone安装过程主要是根据社区文档进行安装部署即可，参考：&lt;/p&gt;

&lt;p&gt;SUSE: &lt;a href=&quot;http://docs.openstack.org/mitaka/install-guide-obs/index.html&quot;&gt;http://docs.openstack.org/mitaka/install-guide-obs/index.html&lt;/a&gt; 主要执行以下步骤来安装配置keystone&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://docs.openstack.org/mitaka/install-guide-obs/environment-packages.html&quot;&gt;添加软件源并安装包python-openstackclient&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://docs.openstack.org/mitaka/install-guide-obs/environment-sql-database.html&quot;&gt;安装数据库&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://docs.openstack.org/mitaka/install-guide-obs/environment-memcached.html&quot;&gt;安装memcache服务器&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://docs.openstack.org/mitaka/install-guide-obs/keystone.html&quot;&gt;安装keystone&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Ubuntu:&lt;a href=&quot;http://docs.openstack.org/mitaka/install-guide-ubuntu/&quot;&gt;http://docs.openstack.org/mitaka/install-guide-ubuntu/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Red Hat Enterprise Linux 7 and CentOS7: &lt;a href=&quot;http://docs.openstack.org/mitaka/install-guide-rdo/&quot;&gt;http://docs.openstack.org/mitaka/install-guide-rdo/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;keystonead&quot;&gt;keystone对接AD配置&lt;/h3&gt;

&lt;p&gt;第一步：source keystone证书文件openrc(v3版本)，该文件内容如下所示：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@ldap:~# cat openrc_v3
export OS_PROJECT_DOMAIN_NAME=default
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=root
export OS_AUTH_URL=http://127.0.0.1:35357/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;第二步：在路径’/etc/keystone/’下创建domains目录，并修改用户权限&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;＃　新建目录
mkdir /etc/keystone/domains/
＃　修改权限
chown keystone /etc/keystone/domains/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;第三步：修改配置文件keystone.conf，做如下修改&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 文件位置　/etc/keystone
[identity]
domain_specific_drivers_enabled = true
domain_config_dir = /etc/keystone/domains
[assignment]
driver = keystone.assignment.backends.sql.Assignment
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;第四步：查看AD server的NetBIOS name 作为AD DS的域&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS C:\&amp;gt; Get-ADDomain | select NetBIOSName
NetBIOSName
-----------
USTACK
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;由上所示我们可以看到NetBIOS name 为USTACK&lt;/p&gt;

&lt;p&gt;第五步：用openstack命令创建AD 用户域&lt;/p&gt;

&lt;p&gt;使用上步骤得到的NetBIOSName作为keystone账户中的域名。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openstack domain create  USTACK
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;第五步：在/etc/keystone/domains/下创建文件keystone.USTACK.conf（注意该文件的命名必须格式keystone.{NetBIOSName}.conf）并做如下配置：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[ldap]
url = ldap://172.16.10.13
user = cn=chengkun,cn=Users,dc=ustack,dc=test
password = Ustack2016
suffix = dc=ustack,dc=test
user_tree_dn = cn=Users,dc=ustack,dc=test
# user_filter = (memberOf=cn=ustack_admin,OU=UserGroups,DC=ustack,DC=test)
user_objectclass = person
user_id_attribute = sAMAccountName
user_name_attribute = sAMAccountName
user_mail_attribute = mail
user_pass_attribute =
user_enabled_attribute = userAccountControl
user_enabled_mask = 2
user_enabled_default = 512
user_attribute_ignore = password,tenant_id,tenants
user_allow_create = false
user_allow_update = false
user_allow_delete = false
group_tree_dn = OU=UserGroups,DC=ustack,DC=test
# group_tree_dn = cn=Users,dc=ustack,dc=test
group_objectclass = group
group_id_attribute = cn
group_name_attribute = cn
group_allow_create = False
group_allow_update = False
group_allow_delete = False
[identity]
driver = keystone.identity.backends.ldap.Identity
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;注意上面配置的用户信息根据实际用户信息填写即可。&lt;/p&gt;

&lt;p&gt;修改该文件权限：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chown keystone /etc/keystone/domains/keystone.LAB.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;第六步：给AD账户domain分配权限&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#查看domain id
[root@localhost ~]# openstack domain show USTACK
+---------+----------------------------------+
| Field   | Value                            |
+---------+----------------------------------+
| enabled | True                             |
| id      | 1954d71a8445418482b4d3966e6a8cfe |
| name    | USTACK                           |
+---------+----------------------------------+
#查询admin用户id
[root@localhost ~]# openstack user list --domain default | grep admin
| 8ef5b603ae1344cea4fe060d198d42ad | admin |

#给用户admin在domain USTACK中添加admin的role
openstack role add --domain 1954d71a8445418482b4d3966e6a8cfe --user 8ef5b603ae1344cea4fe060d198d42ad admin

#可以通过以下命令查看是否已经添加上
[root@localhost ~]# openstack role assignment list | grep 1954d71a8445418482b4d3966e6a8cfe | grep 8ef5b603ae1344cea4fe060d198d42ad
| 9d9bb1f3f9e84e999cc18f99fd901398 | 8ef5b603ae1344cea4fe060d198d42ad                                 |                                  |                                  | 1954d71a8445418482b4d3966e6a8cfe |
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;第七步：重启keystone服务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 注：如果keystone跑在httpd上，直接重启httpd服务即可
systemctl restart openstack-keystone.service
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-2&quot;&gt;参考资料&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;https://docs.hpcloud.com/commercial/GA1/1.1commerical.services-identity-integrate-ldap.html#topic9275__connect&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://access.redhat.com/documentation/en/red-hat-enterprise-linux-openstack-platform/7/integrate-with-identity-service/chapter-1-active-directory-integration&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://technet.microsoft.com/en-us/library/ee617195.aspx&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;http://windowsitpro.com/powershell/top-10-active-directory-tasks-solved-powershell&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 02 Jun 2016 17:00:13 +0800</pubDate>
        <link>http://www.pisces.ml/articles/openstack/2016602</link>
        <guid isPermaLink="true">http://www.pisces.ml/articles/openstack/2016602</guid>
        
        
        <category>openstack</category>
        
      </item>
    
      <item>
        <title>tcpdump命令详解</title>
        <description>&lt;p&gt;这篇文章主要是记录关于tcpdump的使用，tcpdump是常用的抓包工具，该工具可以灵活的抓取在网络中包传输。&lt;/p&gt;

&lt;p&gt;（操作系统：ubuntu 15.04）&lt;/p&gt;

&lt;h2 id=&quot;tcpdump&quot;&gt;tcpdump命令格式&lt;/h2&gt;

&lt;p&gt;注意：详细解释可以通过man tcpdump来查看。&lt;/p&gt;

&lt;p&gt;tcpdump [-i 网卡] -nnAX ‘表达式’&lt;/p&gt;

&lt;p&gt;参数意义：
-i: interface 监听的网卡
-nn：表示以ip和port的方式显示来源主机和目的主机，而不是用主机名和服务
-A：以ascii的方式显示数据包，抓取web数据时很有用
-X：数据包将会以16进制和ascii的方式显示（这样显示有什么好处？）&lt;/p&gt;

&lt;p&gt;表达式：表达式有很多种，常见的有：host 主机；port 端口；src host 发包主机；dst host 收包主机。多个条件可以用and、or组合，取反可以使用!，更多的使用可以查看man 7 pcap-filter。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;监听网卡&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 监听eth0网卡
tcpdump -i eth0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;可以使用ifconfig命令来查看网卡信息，以便通过tcpdump命令来监听相应网卡。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;监听指定协议的数据&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 表示监听eth0网卡，并且只接收icmp协议数据
tcpdump -i eth0 -nn &#39;icmp&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;监听icmp协议类型数据，icmp即ping命令使用的协议。常用的协议类型有tcp,udp等。&lt;/p&gt;

&lt;p&gt;示例：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.pisces.ml/images/tcpdump.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;以上是抓取icmp协议类型数据，数据含义：&lt;/p&gt;

&lt;p&gt;抓到包的时间 IP 发包的主机和端口 &amp;gt; 接收的主机和端口 数据包内容&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;监听指定的主机&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tcpdump -i eth0 -nn &#39;host 192.168.1.231&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;该命令表示抓取主机192.168.1.231的发送包和接收包&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tcpdump -i eth0 -nn &#39;src host 192.168.1.231&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;表示只抓取主机192.168.1.231发送的包&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tcpdump -i eth0 -nn &#39;dst host 192.168.1.231&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;表示只抓取主机192.168.1.231接收到的包&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;监听指定端口&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tcpdump -i eth0 -nnA &#39;port 80&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;该命令表示抓取80端口的数据包，并以ascii的方式显示数据包，在web开发中很实用&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;监听指定主机和端口&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tcpdump -i eth0 -nnA &#39;port 80 and src host 192.168.1.231&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;多个条件可以用and，or连接。上例表示监听192.168.1.231主机通过80端口发送的数据包。&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;监听除某个端口外的其它端口&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tcpdump -i eth0 -nnA &#39;!port 22&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果需要排除某个端口或者主机，可以使用“!”符号，上例表示监听非22端口的数据包。&lt;/p&gt;

&lt;p&gt;———————————————–华丽分割线—————————————–&lt;/p&gt;

&lt;p&gt;以上内容记录以备后用。。。。。。。&lt;/p&gt;
</description>
        <pubDate>Sun, 22 May 2016 17:00:13 +0800</pubDate>
        <link>http://www.pisces.ml/articles/linux/2016522</link>
        <guid isPermaLink="true">http://www.pisces.ml/articles/linux/2016522</guid>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>keystone架构和功能分析</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;简介&lt;/h2&gt;
&lt;p&gt;Keystone(OpenStack Identity Service)是 OpenStack 框架中负责管理身份验证、服务规则和服务令牌功能等的模块。用户访问资源需要验证用户的身份与权限，服务执行操作也需要进行权限检测，这些都需要通过 Keystone 来处理。目前Keystone同时支持V2和V3版本．Keystone V3 版本做出了许多变化和改进，引入了 Domain 和 Group 等新概念．&lt;/p&gt;

&lt;h2 id=&quot;keystone&quot;&gt;keystone基本概念&lt;/h2&gt;

&lt;p&gt;Keystone 中主要涉及到如下几个概念：User、Project(v3)、Domain、Region、Role、Token。下面对这几个概念进行简要说明。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;User：即使用服务的用户，可以是人、服务或者是系统，只要是使用了 Openstack 服务的对象都可以称为用户。&lt;/li&gt;
  &lt;li&gt;Project：项目或者理解为组织拥有的资源的合集。在一个项目中可以拥有很多个用户，这些用户可以根据权限的划分使用项目中的资源。&lt;/li&gt;
  &lt;li&gt;Domain: 作用域，即项目的集合，在一个域内可以创建多个项目。&lt;/li&gt;
  &lt;li&gt;Region: 作用范围，是域的集合，通过Region来划分区域，Region包括了所有的可用资源。&lt;/li&gt;
  &lt;li&gt;Role角色:用于分配操作的权限。角色可以被指定给用户，使得该用户获得角色对应的操作权限。&lt;/li&gt;
  &lt;li&gt;Credential 用户证据：用来证明用户身份的证据，可以是用户名和密码、用户名和API key，或者一个 Keystone 分配的身份token。&lt;/li&gt;
  &lt;li&gt;Token令牌：指的是一串比特值或者字符串，用来作为访问资源的记号。Token 中含有可访问资源的范围和有效时间。&lt;/li&gt;
  &lt;li&gt;Group组：分组可以跟项目或者域建立相应关系．同组的项目可以对项目或者域内享有相应的操作权限。&lt;/li&gt;
  &lt;li&gt;Service 服务：一个 OpenStack 服务，比如Nova、Swift或者Glance等。每个服务提供一个或者多个 endpoint 供用户访问资源以及进行操作。&lt;/li&gt;
  &lt;li&gt;Endpoint端点 ：一个网络可访问的服务地址，通过它你可以访问一个服务，通常是个 URL 地址。不同 region 有不同的service endpoint。endpoint告诉也可告诉 OpenStack service 去哪里访问特定的 servcie。比如，当 Nova 需要访问 Glance 服务去获取 image 时，Nova 通过访问 Keystone 拿到 Glance 的 endpoint，然后通过访问该 endpoint 去获取Glance服务。我们可以通过Endpoint的 region 属性去定义多个 region。Endpoint 该使用对象分为三类：
    &lt;ol&gt;
      &lt;li&gt;adminurl:提供给admin访问&lt;/li&gt;
      &lt;li&gt;internalurl:该地址是给内部服务之间进行访问&lt;/li&gt;
      &lt;li&gt;publicurl:公共用户可以访问的地址&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Policy:OpenStack对用户的验证除了 OpenStack 的身份验证以外，还需要鉴别用户对某个服务是否有访问权限。Policy 机制就是用来控制某一个 User 在某个 Tenant 中某个操作的权限。这个 User 能执行什么操作，不能执行什么操作，就是通过 policy 机制来实现的。对于 Keystone 服务来说，policy 就是一个json 文件，默认是 /etc/keystone/policy.json。通过配置这个文件，Keystone Service 实现了对 User 的基于用户角色的权限管理。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;概念理解&lt;/h2&gt;

&lt;h3 id=&quot;section-2&quot;&gt;账户关系&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://www.pisces.ml/images/relation_user_project_region.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从上图中，我们可以看出在一个 RegionOne中包含多个Domain，每个Domain共同使用Region所提供的资源。Domain1中包含 3 个 Projects,可以通过 Group1 将 Role admin直接赋予 Domain,那么 Group1 中的所有用户将会对 Domain1中的所有 Projects 都拥有admin权限。也可以通过 Group2 将 Role demo 只赋予 Project3,这样 Group2 中的 User 就只拥有对Project3有相应的权限，而不会影响其它 Projects。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;管理对象关系&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://www.pisces.ml/images/flow_chart.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从上图我们可以清晰的看到各个对象之间的总体关系，简单的说用户通过用户名密码登入（或者使用联合认证登入），验证成功keystone会返回相应的token(scope_token/unscope_token),scope_token中包含一系列的meta信息（包括端口／角色／项目），每次请求都会先验证token有效性，用户再拿这token去请求相应的资源，服务跟服务之间访问也是通过endpoint找到服务地址并进行请求资源信息，可见token在整个openstaqck家族起到了很重要的作用。另外需要提的是各个服务中的policy机制，policy是根据token中的角色信息来判断用户是否有相应的操作权限。&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;架构&lt;/h2&gt;

&lt;h3 id=&quot;section-5&quot;&gt;整体架构图&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://www.pisces.ml/images/openstack.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;由上图可知keystone为各个模块提供认证服务，所以各个模块与keystone都有所交互。其中登录认证体现在用户访问各个组件的API时，调用了WSGI框架的authtoken filter，该filter最先调用keystoneclient ，最终通过keystone验证token，完成对用户的登录认证。如果认证失败，用户将不能访问该API。&lt;/p&gt;

&lt;h3 id=&quot;keystone-1&quot;&gt;keystone架构&lt;/h3&gt;

&lt;h4 id=&quot;keystone-2&quot;&gt;keystone源码结构&lt;/h4&gt;

&lt;p&gt;目录结构&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;├── assignment
│   ├── backends
│   ├── controllers.py
│   ├── controllers.pyc
│   ├── core.py
│   ├── core.pyc
│   ├── __init__.py
│   ├── __init__.pyc
│   ├── role_backends
│   ├── routers.py
│   ├── routers.pyc
│   ├── schema.py
│   └── schema.pyc
├── auth
│   ├── controllers.py
│   ├── controllers.pyc
│   ├── core.py
│   ├── core.pyc
│   ├── __init__.py
│   ├── __init__.pyc
│   ├── plugins
│   ├── routers.py
│   └── routers.pyc
├── backends.pyc
├── catalog
│   ├── backends
│   ├── controllers.py
│   ├── controllers.pyc
│   ├── core.py
│   ├── core.pyc
│   ├── __init__.py
│   ├── __init__.pyc
│   ├── routers.py
│   ├── routers.pyc
│   ├── schema.py
│   └── schema.pyc
├── clean.pyc
├── cli.pyc
├── cmd
│   ├── all.py
│   ├── all.pyc
│   ├── cli.py
│   ├── cli.pyc
│   ├── __init__.py
│   ├── __init__.pyc
│   ├── manage.py
│   └── manage.pyc
......
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;cmd目录下(主要存放命令行工具)：
    &lt;ul&gt;
      &lt;li&gt;keystone-all（本地启动服务监听35357和5000端口）&lt;/li&gt;
      &lt;li&gt;keystone-manage（keystone综合管理工具
  a. db_sync:初始化数据库
  b. db_version：打印数据库迁移版本
  c. fernet_rotate：Rotate Fernet encryption keys。
  d. fernet_setup：Setup a key repository for Fernet tokens
  e. mapping_purge:清空mapping表
  f. pki_setup：初始化生成密钥对和证书文件
  g. saml_idp_metadata：生成Identity Provider的metadata
  h. ssl_setup ：为https链接生成密钥对和证书
  i. token_flush ：清除过期token&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;服务目录：
    &lt;ul&gt;
      &lt;li&gt;服务目录如identity,token,catalog等，他们的架构类似都是通过router进行url路由到相应的controller上，controller进行逻辑处理，通过指定的driver调用相应的后台处理。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;server目录：
    &lt;ul&gt;
      &lt;li&gt;服务入口，主要是加载配置启动服务监听相应端口&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;middleware目录：
    &lt;ul&gt;
      &lt;li&gt;中间键支持，用于预处理request请求&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;keystone-3&quot;&gt;keystone服务启动&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;启动方式&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;keystone可以通过两种方式启动分别是本地开发模式和部署环境：&lt;/p&gt;

&lt;p&gt;本地开发环境：keystone-all –configl-file /etc/keystone/keystone.conf&lt;/p&gt;

&lt;p&gt;部署环境：主要是将应用跑在httpd上，可参考配置文档：http://docs.openstack.org/developer/keystone/apache-httpd.html&lt;/p&gt;

&lt;p&gt;&lt;em&gt;启动模式分析&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;keystone通过paste deploy组织app，会启动admin(监听35357端口)和main(监听5000端口),对应keystone-paste.ini中的[composite:main]和[composite:admin]，如下所示配置文件：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.pisces.ml/images/image2016-3-4 16-57-3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从上面配置文件我们可以看出admin应用主要是提供管理员app，main主要提供了公共app。他们同时都支持v2和v3版本api，我们可以看出v3版本的api在admin和main中是没有差异的（在v3版本中都是使用api_v3），但是在v2版本中存在差异，在main用了public_api而在admin中用了admin_api（这就可以解释为何在v2版本中向不同的端口发送相同的请求却返回不同结果）。简单的说在v2版本中还区分admin和public，在v3版本中已经不区分，v3版本中就是按照RBAC即访问控制来决定用户是否对该api有操作权限。&lt;/p&gt;

&lt;p&gt;具体的factory构造，包括路由的实现，以及中间件的处理，到最终的应用处理有兴趣可以看看源码的实现，这里就不多说了。&lt;/p&gt;

&lt;h4 id=&quot;keystone-resful-api&quot;&gt;keystone RESful Api架构&lt;/h4&gt;

&lt;p&gt;架构图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.pisces.ml/images/RESTFul_API.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;keystone是基于python WSGI框架实现的web应用，通过paste组织web应用服务网络，对外提供REST Api，主要提供了提供 Identity、Token、Catalog 、Resource、Assignment和 Policy 服务：
* Identity服务验证了身份验证凭证，并提供了所有相关的元数据。
* Token服务验证并管理用于验证请求身份的令牌。
* Catalog服务提供了可用于端点发现的服务注册表。
* Policy服务暴露了一个基于规则的身份验证引擎。
* Resource服务提供资源包括project/domain
* Assignment服务分配角色&lt;/p&gt;

&lt;p&gt;每个 Keystone 功能都支持用于集成到异构环境并展示不同功能的后端插件。通过下表我们看下各个服务所管理的对象：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;| 组件名称 | 管理对象 | 类型/格式 | 服务后台 | 配置后台 |
|:-----:|:-----:|:-----:|:-----:|:-----:|
| identity | keystone.identity.controllers.Groupl3 keystone.identity.controllers.UserV3 | -- | ldap/sql | [identity] driver = sql|
| Token | keystone.token.controllers.Auth | uuid/pki/pkiz/fernet | kvs/sql/memcache/memcache_pool | [token] provider = uuid/pki/pkiz/fernet driver = sql/memcache/memcache_pool |
|Catalog  | keystone.catalog.controllers.EndpointV3 keystone.catalog.controllers.RegionV3 keystone.catalog.controllers.ServiceV3 | -- |  kvs/templated/sql | [catalog] driver=sql/kvs/templated |
| Policy | keystone.policy.controllers.PolicyV3 | -- | sql | [policy] driver=sql |
| Resource | keystone.resource.controllers.DomainV3 keystone.resource.controllers.ProjectV3 | -- | ldap/sql | [resource] driver=ldap/sql |
| Assignment | keystone.assignment.controllers.GrantAssignmentV3 keystone.assignment.controllers.ProjectAssignmentV3 keystone.assignment.controllers.TenantAssignment keystone.assignment.controllers.Role keystone.assignment.controllers.RoleAssignmentV2 keystone.assignment.controllers.RoleAssignmentV3 keystone.assignment.controllers.RoleV3 | -- | sql/ldap | [assignment] driver=sql/ldap |
| Authentication | keystone.auth.controllers.Auth | password/saml2/token/oauth1 | -- | [auth] methods=external,password,token,oauth1 password=keystone.auth.plugins.password.Password token=keystone.auth.plugins.token.Token |
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-6&quot;&gt;安装配置&lt;/h2&gt;

&lt;h3 id=&quot;section-7&quot;&gt;软件安装&lt;/h3&gt;

&lt;p&gt;可以通过两种方式安装keystone:
* 源码安装
* 软件包安装&lt;/p&gt;

&lt;p&gt;&lt;em&gt;源码安装（本地环境）&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone https://git.openstack.org/openstack/keystone.git　#拷贝源码
$ cd keystone/ &amp;amp;&amp;amp; virtualenv .venv #进入软件包，创建本地隔离环境
$ source .venv/bin/activate
$ pip install -r requirements.txt　＃安装软件依赖包
$ python setup.py install/develop　＃可以根据需要选择已哪种方式安装，系统安装／开发者模式安装
$ vim /etc/keystone/keystone.conf　＃根据具体需求配置keystone，可参考官方配置文档：http://docs.openstack.org/developer/keystone/configuration.html
# 初始化数据库: keystone-manage --config-file etc/keystone.conf db_sync
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;软件包安装&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;＃Ubuntu
$ sudo apt-get install keystone
# Fedora
$ sudo yum install openstack-keystone

# 配置keystone配置文件keystone.conf
# 初始化数据库: keystone-manage --config-file etc/keystone.conf db_sync
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-8&quot;&gt;配置说明&lt;/h3&gt;

&lt;p&gt;keystone代码的etc/目录下含有keystone的配置文件&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;keystone.conf 主要配置文件&lt;/li&gt;
  &lt;li&gt;keystone-paste.ini paste配置文件, 可以通过修改此文件增减keystone运行时加载的扩展(contrib).&lt;/li&gt;
  &lt;li&gt;default_catalog.templates 定义service catalog的语法文件, 如果keystone的catalog driver 定义为keystone.catalog.backends.templated.Catalog 则会从文本文件中读取endpoint信息(严格注意语法, 空格等), 定义成keystone.catalog.backends.sql.Catalog 则会从数据库中加载endpoint.&lt;/li&gt;
  &lt;li&gt;policy.json keystone的接口权限控制定义.&lt;/li&gt;
  &lt;li&gt;policy.v3cloudsample.json keystone 官方的多domain部署方式中的权限控制example文件,我们没有使用.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;keystone.conf 中主要配置选项说明:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[DEFAULT]
   admin_token = ADMIN   # 定义一个超级管理员的token, 使用此token可以绕过权限检查直接操作所有接口, 此参数应该只在安装完keystone后创建初始账户时使用, 生产环境中应该被禁用, 禁用方法为: 在keystone-paste.ini中将所有pipeline中的admin_token_auth这个filter删掉.
debug = False # 打印debug级别的日志
verbose = False  # 打印info级别的日志 ,
   &quot;&quot;&quot;
   日志级别控制的逻辑为:
    if CONF.debug:
        log_root.setLevel(logging.DEBUG)
    elif CONF.verbose:
        log_root.setLevel(logging.INFO)
    else:
        log_root.setLevel(logging.WARNING)
&quot;&quot;&quot;
log_file = /var/log/keystone.log   # 指定将log打到哪个日志文件中, 不设置,日志会打印到屏幕
# 和rabbitmq相关的主要参数
rabbit_host = localhost
rabbit_port = 5672
rabbit_userid = openstack
rabbit_password = testing
rabbit_virtual_host = /
rabbit_ha_queues = True
amqp_durable_queues = True  # 为true的话,所有rabbitmq相关的消息,queue,exchange都会变成持久化的.
control_exchange  = keystone  # keystone 发送的 消息都会发到该 exchange
[auth]
methods = password, token   # 开启的认证方式
password = keystone.auth.plugins.password.Password  # methods中每个定义的认证方法都需要在下方定义
token = keystone.auth.plugins.token.Token
[catalog]
template_file = default_catalog.templates   # 如果driver为templated, 则此选项生效
driver = keystone.catalog.backends.sql.Catalog
[token]
expiration = 3600  # token的过期时间, 按s计算,默认3600s
provider = keystone.token.provider.uuid.Provider  # 使用的token格式, uuid/pki/pkiz/fernet
[database]
connection = mysql://root:root@localhost/keystone  # 定义数据库连接, 如果使用sqlite,则可以修改为sqlite:///keystone.db
[os_inherit]
enabled = True  # 日否开启os_inherit 扩展, 官方对此扩展的说明文档: https://github.com/openstack/identity-api/blob/master/v3/src/markdown/identity-api-v3-os-inherit-ext.md
所有参数的默认值定义都在keystone/common/config.py中
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;fqa&quot;&gt;FQA&lt;/h2&gt;

&lt;p&gt;Ｑ：keystone的35357和5000端口有什么区别?
Ａ：在keystone的 v3 api中35357 和5000 没有任何区别, 建议统一只使用35357端口, 在v2.0的api中, 5000是public api的端口,35357是admin api的端口, 两者提供api的具体差别可以看keystone-paste.ini中的[pipeline:public_api] 和[pipeline:admin_api].
Ｑ：如何开启一个默认未启用的扩展?
Ａ：keystone的扩展,都以filter的形式在keystone-paste.ini中定义, 需要开启只需要将其加入相应的pipeline中,注意的是有些扩展还依赖一些数据库表, 这些表默认安装是不会生成的, 需要用keystone-manage 命令额外初始化.
比如要启用oauth1扩展, 此扩展有自己的数据库表:
oauth1在keystone-paste.ini中的定义为[filter:oauth1_extension], 将其加入[pipeline:api_v3], 顺序最好放在service_v3之前. PS: 有些扩展只支持v2.0 api,有些只支持v3 api,实际情况可以查看它们的实现,比如oauth1: keystone.contrib.oauth1.controllers, 其中所有的controller都是继承自V3Controller, 则此api只能在v3下使用. keystone-manage –config-file etc/keystone.conf db_sync –extension oauth1 接下来即可使用oauth1扩展定义的api了.&lt;/p&gt;

&lt;h2 id=&quot;section-9&quot;&gt;参考文档&lt;/h2&gt;

&lt;p&gt;http://docs.openstack.org/developer/keystone/
http://docs.openstack.org/developer/keystone/architecture.html#application-construction
http://docs.openstack.org/developer/keystone/installing.html
http://docs.openstack.org/developer/keystone/developing.html
http://www.ibm.com/developerworks/cn/cloud/library/cl-openstack-keystone/index.html
https://www.ibm.com/developerworks/cn/cloud/library/cl-openstack-pythonapis/
http://www.cnblogs.com/sammyliu/p/4272611.html
http://blog.csdn.net/hzrandd/article/details/10834381&lt;/p&gt;

</description>
        <pubDate>Sun, 24 Apr 2016 17:00:13 +0800</pubDate>
        <link>http://www.pisces.ml/articles/openstack/20160425</link>
        <guid isPermaLink="true">http://www.pisces.ml/articles/openstack/20160425</guid>
        
        
        <category>openstack</category>
        
      </item>
    
      <item>
        <title>linux病毒扫描软件ClamAV安装于使用</title>
        <description>&lt;p&gt;近期安装的几台虚拟机网络出去流量高的惊人，达到400~600M/s，直接导致网络几乎瘫痪。直接导致远程连接不上主机，网络延迟特别高。查询原因发现后台有一个进程消耗一半cpu，并且该进程杀死后又会自动启动另外一个进程，无法杀掉。当断掉公网ip后就能kill掉该进程，且不会再自动启动。且该局域网中所有主机均出现该状况，
根据该现象有可能是ddos攻击导致。于是上网查了一些杀毒软件，试图kill掉该病毒。网上查询到了一款ubuntu上的开源杀毒软件，尝试了以下果然有效果。下面我们来介绍下这款软件clamAV，尝试了以下果然有效果。下面我们来介绍下这款软件clamAV。&lt;/p&gt;

&lt;h2 id=&quot;clamav&quot;&gt;什么是clamAV&lt;/h2&gt;

&lt;p&gt;clamAV全名Clam AntiVirus，是一款开源的杀毒软件，能够预防许多的恶意软件主要应用于邮件服务器。扫描并清理系统中的恶意软件。&lt;/p&gt;

&lt;p&gt;clamAV包含了大量的实用程序如：命令行扫描，自动跟新数据库和可扩展多线程守护进程，以及反病毒引擎。&lt;/p&gt;

&lt;p&gt;接下来我们就来介绍下clamAV的安装和使用。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;安装＆配置&lt;/h2&gt;

&lt;p&gt;1.安装软件包&lt;/p&gt;

&lt;p&gt;clamAV安装方法有很多可以直接去官网&lt;a href=&quot;http://www.clamav.net/download.html&quot;&gt;下载&lt;/a&gt;并进行安装，为了方便我们可以直接执行以下命令直接在ubuntu系统中安装该软件包：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 如果安装不了我们可以先更新下软件源`apt-get update`
sudo apt-get install clamav clamav-daemon
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.更新病毒数据库&lt;/p&gt;

&lt;p&gt;安装完成后clamAV会提示你安装病毒数据库，clamAV会根据数据库中提供的数据对系统进行搜索查询，我们只需要执行以下命令来同步远程病毒数据库,该命令会下载main.cvd和daily.cvd文件。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo freshclam
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;clamav-1&quot;&gt;clamAV使用&lt;/h2&gt;

&lt;p&gt;安装很简单，使用更简单，就一个&lt;code class=&quot;highlighter-rouge&quot;&gt;clamscan&lt;/code&gt;命令即可。示例：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 扫描/home目录下的文件
clamscan -r /home

# 全盘扫描(该命令可能执行时间比较长)
clamscan -r /

# 格式化输出，只输出显示病毒文件或者是恶意进程
clamscan -r --bell -i /

# 查询任意位置，并将结果写入新文件记录
sudo clamscan -r /folder/to/scan/ | grep FOUND &amp;gt;&amp;gt; /path/to/save/report/myfile.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如上命令会扫描目录，如果发现恶意软件或者病毒文件会自动清理&lt;/p&gt;

&lt;p&gt;我们还可以为clamAV建立定时任务执行如下命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;crontab -e
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;并在定时任务中写入如下任务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;00 00 * * * clamscan -r /location_of_files_or_folder # 根据实际指定搜索文件夹
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;另外如果你不习惯使用命令行，还可以使用clamAV的GUI界面，需要执行以下命令安装GUI&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install ClamTK
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 27 Mar 2016 17:00:13 +0800</pubDate>
        <link>http://www.pisces.ml/articles/linux/2016328</link>
        <guid isPermaLink="true">http://www.pisces.ml/articles/linux/2016328</guid>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>openstack 多节点安装</title>
        <description>&lt;p&gt;本文记录双节点openstack部署流程,根据&lt;a href=&quot;http://docs.openstack.org/liberty/install-guide-ubuntu/&quot;&gt;官方文档&lt;/a&gt;,一步一步搭建openstack,并且记录搭建过程遇到的坑。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;概要&lt;/h2&gt;

&lt;p&gt;openstack是一个开源社区，提供IAAS解决方案，我们首先来了解下基础服务：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.openstack.org/developer/horizon/&quot;&gt;Horizon&lt;/a&gt;:面板服务，直接面向用户，为用户提供可视操作。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.openstack.org/developer/nova/&quot;&gt;Nova&lt;/a&gt;:计算服务，提供计算机生命周期管理，如新建虚拟机等。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.openstack.org/developer/neutron/&quot;&gt;Neutron&lt;/a&gt;:网络服务，提供云计算环境下的虚拟网络功能。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.openstack.org/developer/keystone/&quot;&gt;Keystone&lt;/a&gt;:认证服务，提供用户认证以及openstack中服务认证。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.openstack.org/developer/glance/&quot;&gt;Glance&lt;/a&gt;:镜像服务，提供镜像存储。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.openstack.org/developer/ceilometer/&quot;&gt;Ceilometer&lt;/a&gt;:监控服务，负责资源监控实时了解资源情况。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.openstack.org/developer/swift/&quot;&gt;Swift&lt;/a&gt;:对象存储服务，提供多租户的对象存储。&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.openstack.org/developer/cinder/&quot;&gt;Cinder&lt;/a&gt;:块存储服务，提供块存储。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;部署架构&lt;/h2&gt;

&lt;h3 id=&quot;section-2&quot;&gt;硬件架构&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://www.pisces.ml/images/hwreqs.png&quot; alt=&quot;部署结构图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;常规部署主要有分为控制节点，计算节点，网络节点。我们以最简方式部署，如上图所示使用两个节点，控制节点和计算节点，我们不单独部署网络节点将网络agent部署在控制节点不单独部署在网络节点。另外配置至少如上要求所示。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;软件架构&lt;/h3&gt;

&lt;p&gt;1.软件部署架构如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.pisces.ml/images/network2-services.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;控制节点&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;控制节点主要部署openstack基础服务如：keystone,horizon,Neutron等，以及基础服务的支持服务，如：消息队列，NTP，mysql等。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;计算节点&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;计算节点主要部署hypervisor，根据nova调度算法创建实例，以及网络服务。&lt;/p&gt;

&lt;p&gt;2.网络拓扑架构图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.pisces.ml/images/networklayout.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;环境准备&lt;/h2&gt;

&lt;h3 id=&quot;section-5&quot;&gt;基础环境搭建&lt;/h3&gt;

&lt;p&gt;以下环境搭建在通过&lt;a href=&quot;https://console.ustack.com&quot;&gt;ustack&lt;/a&gt;云平台进行搭建：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;新建路由器route0&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;创建私有网络public-network和management-network&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;申请名为net的公网并且绑定到路由器route&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将私有网络public-network关联到路由器route&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;创建控制节点controller(2vcpu,8G)和计算节点compute(4vcpu,8G),将controller加入私有网络public-network,将compute加入私有网络public-network和management-network&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;搭建完成后网络拓扑如下所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.pisces.ml/images/topology.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;host&quot;&gt;配置host&lt;/h3&gt;

&lt;p&gt;接着我们来配置控制节点和计算几点host&lt;/p&gt;

&lt;p&gt;修改文件/etc/hosts,如下所示：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 控制节点编辑文件/etc/hosts

192.168.2.2 controller
192.168.2.5 compute

# 计算节点同上操作
192.168.2.2 controller
192.168.2.5 compute
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;可以通过以下命令在控制节点和计算节点验证是否配置正确：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;root@compute:~# ping controller
PING controller (192.168.2.2) 56(84) bytes of data.
64 bytes from controller (192.168.2.2): icmp_seq=1 ttl=64 time=0.407 ms
64 bytes from controller (192.168.2.2): icmp_seq=2 ttl=64 time=0.508 ms
64 bytes from controller (192.168.2.2): icmp_seq=3 ttl=64 time=0.571 ms&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;root@compute:~# ping -c 4 openstack.org
PING openstack.org (162.242.140.107) 56(84) bytes of data.
64 bytes from 162.242.140.107: icmp_seq=1 ttl=42 time=386 ms
64 bytes from 162.242.140.107: icmp_seq=2 ttl=42 time=384 ms
64 bytes from 162.242.140.107: icmp_seq=3 ttl=42 time=386 ms&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section-6&quot;&gt;安装支持软件&lt;/h3&gt;

&lt;h4 id=&quot;ntp&quot;&gt;安装NTP服务&lt;/h4&gt;

&lt;p&gt;控制节点controller：&lt;/p&gt;

&lt;p&gt;1.安装chrony包&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install chrony
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.编辑文件/etc/chrony/chrony.conf插入以下内容&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 以asia.pool.ntp.org时间为例
server asia.pool.ntp.org iburst
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.重启NTP服务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;service chrony restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;计算节点compute：&lt;/p&gt;

&lt;p&gt;安装步骤跟控制节点一样，在编辑/etc/chrony/chrony.conf文件时需要插入以下内容：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 表示跟controller节点时间同步
server controller iburst
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;验证：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# *表示当前所用的时间
# 控制节点
root@controller:~# chronyc sources
210 Number of sources = 1
MS Name/IP address         Stratum Poll Reach LastRx Last sample
===============================================================================
^* host-2.net50.sol.az           4   6   177    55  +3003us[ +313us] +/-  694ms

# 计算节点
root@compute:~# chronyc sources
210 Number of sources = 1
MS Name/IP address         Stratum Poll Reach LastRx Last sample
===============================================================================
^* controller                    5   6   377    36  +4607us[  +27ms] +/-  734ms
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;openstack&quot;&gt;安装openstack软件包支持&lt;/h4&gt;

&lt;p&gt;该操作在所有节点均执行&lt;/p&gt;

&lt;p&gt;修改文件/etc/apt/sources.list，增加以下内容：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;deb http://ubuntu-cloud.archive.canonical.com/ubuntu trusty-updates/liberty main&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;执行命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get update &amp;amp;&amp;amp; apt-get dist-upgrade
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果出现如下错误：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;error:
W: GPG error: http://ubuntu-cloud.archive.canonical.com trusty-updates/liberty Release: The following signatures couldn’t be verified because the public key is not available: NO_PUBKEY 5EDB1B62EC4926EA
执行命令&lt;code class=&quot;highlighter-rouge&quot;&gt;apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 5EDB1B62EC4926EA&lt;/code&gt;后在运行&lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get update &amp;amp;&amp;amp; apt-get dist-upgrade&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;sql&quot;&gt;安装SQL数据库&lt;/h4&gt;

&lt;p&gt;在控制节点执行如下操作：&lt;/p&gt;

&lt;p&gt;1.安装sql包,并且设置root用户密码&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install mariadb-server python-pymysql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.修改文件/etc/mysql/my.cnf并添加如下内容允许所有节点请求。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[mysqld]
bind-address = 0.0.0.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.重启sql服务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;service mysql restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;rabbitmq&quot;&gt;安装消息队列rabbitmq&lt;/h4&gt;

&lt;p&gt;1.安装rabbitmq软件包&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install rabbitmq-server
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.添加openstack用户&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rabbitmqctl add_user openstack root
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.给openstack用户添加读写权限&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rabbitmqctl set_permissions openstack &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;openstack-1&quot;&gt;安装openstack软件&lt;/h2&gt;

&lt;h3 id=&quot;keystone&quot;&gt;安装keystone&lt;/h3&gt;

&lt;h4 id=&quot;keystone-1&quot;&gt;创建keystone数据库&lt;/h4&gt;

&lt;p&gt;创建keystone数据库以及生成admin token&lt;/p&gt;

&lt;p&gt;1.登入数据库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql -uroot
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.创建keystone数据库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CREATE DATABASE keystone;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.添加数据库访问权限&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GRANT ALL PRIVILEGES ON keystone.* TO &#39;keystone&#39;@&#39;localhost&#39; \
  IDENTIFIED BY &#39;root&#39;;
GRANT ALL PRIVILEGES ON keystone.* TO &#39;keystone&#39;@&#39;%&#39; \
  IDENTIFIED BY &#39;root&#39;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;admin-token&quot;&gt;随机生成admin token&lt;/h4&gt;

&lt;p&gt;执行以下命令生成admin token以便后续步骤使用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@controller:~# openssl rand -hex 10
e770648f049dd983575b
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;keystone-2&quot;&gt;安装keystone服务&lt;/h4&gt;

&lt;p&gt;1.从源安装keystone&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 禁止安装完后启动服务
echo &quot;manual&quot; &amp;gt; /etc/init/keystone.override

apt-get install keystone apache2 libapache2-mod-wsgi \
  memcached python-memcache
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.配置keystone配置文件/etc/keystone/keystone.conf,修改以下配置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[DEFAULT]
...
admin_token = e770648f049dd983575b

[database]
...
connection = mysql://keystone:root@controller/keystone?charset=utf8

[memcache]
...
servers = localhost:11211

[token]
...
provider = uuid
driver = memcache

[revoke]
...
driver = sql

[DEFAULT]
...
verbose = True
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.同步数据库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;su -s /bin/sh -c &quot;keystone-manage db_sync&quot; keystone
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;apache&quot;&gt;配置apache服务器&lt;/h4&gt;

&lt;p&gt;1.编辑文件/etc/apache2/apache2.conf修改Servername&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerName controller
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.创建文件/etc/apache2/sites-available/wsgi-keystone.conf，并添加如下内容&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Listen 5000
Listen 35357

&amp;lt;VirtualHost *:5000&amp;gt;
    WSGIDaemonProcess keystone-public processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
    WSGIProcessGroup keystone-public
    WSGIScriptAlias / /usr/bin/keystone-wsgi-public
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
    &amp;lt;IfVersion &amp;gt;= 2.4&amp;gt;
      ErrorLogFormat &quot;%{cu}t %M&quot;
    &amp;lt;/IfVersion&amp;gt;
    ErrorLog /var/log/apache2/keystone.log
    CustomLog /var/log/apache2/keystone_access.log combined

    &amp;lt;Directory /usr/bin&amp;gt;
        &amp;lt;IfVersion &amp;gt;= 2.4&amp;gt;
            Require all granted
        &amp;lt;/IfVersion&amp;gt;
        &amp;lt;IfVersion &amp;lt; 2.4&amp;gt;
            Order allow,deny
            Allow from all
        &amp;lt;/IfVersion&amp;gt;
    &amp;lt;/Directory&amp;gt;
&amp;lt;/VirtualHost&amp;gt;

&amp;lt;VirtualHost *:35357&amp;gt;
    WSGIDaemonProcess keystone-admin processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
    WSGIProcessGroup keystone-admin
    WSGIScriptAlias / /usr/bin/keystone-wsgi-admin
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
    &amp;lt;IfVersion &amp;gt;= 2.4&amp;gt;
      ErrorLogFormat &quot;%{cu}t %M&quot;
    &amp;lt;/IfVersion&amp;gt;
    ErrorLog /var/log/apache2/keystone.log
    CustomLog /var/log/apache2/keystone_access.log combined

    &amp;lt;Directory /usr/bin&amp;gt;
        &amp;lt;IfVersion &amp;gt;= 2.4&amp;gt;
            Require all granted
        &amp;lt;/IfVersion&amp;gt;
        &amp;lt;IfVersion &amp;lt; 2.4&amp;gt;
            Order allow,deny
            Allow from all
        &amp;lt;/IfVersion&amp;gt;
    &amp;lt;/Directory&amp;gt;
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.允许加载keystone服务并重启apache服务器&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ln -s /etc/apache2/sites-available/wsgi-keystone.conf /etc/apache2/sites-enabled

service apache2 restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;service-entityapi-endpoints&quot;&gt;创建service entity和API endpoints&lt;/h4&gt;

&lt;p&gt;1.配置认证信息&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export OS_TOKEN=e770648f049dd983575b
export OS_URL=http://controller:35357/v3
export OS_IDENTITY_API_VERSION=3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.创建keystone服务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@controller:~# openstack service create \
&amp;gt;   --name keystone --description &quot;OpenStack Identity&quot; identity
+-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | OpenStack Identity               |
| enabled     | True                             |
| id          | 70c001520bc346f5a24cbce02251edc0 |
| name        | keystone                         |
| type        | identity                         |
+-------------+----------------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.创建endpoints&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@controller:~# openstack endpoint create --region RegionOne \
&amp;gt;   identity public http://controller:5000/v2.0
+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 20ff23f26e9044bab521cf3aa449107c |
| interface    | public                           |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 70c001520bc346f5a24cbce02251edc0 |
| service_name | keystone                         |
| service_type | identity                         |
| url          | http://controller:5000/v2.0      |
+--------------+----------------------------------+

root@controller:~# openstack endpoint create --region RegionOne \
&amp;gt;   identity internal http://controller:5000/v2.0
+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 2f61696b382f4d18be1dbf26958affc9 |
| interface    | internal                         |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 70c001520bc346f5a24cbce02251edc0 |
| service_name | keystone                         |
| service_type | identity                         |
| url          | http://controller:5000/v2.0      |
+--------------+----------------------------------+

root@controller:~# openstack endpoint create --region RegionOne \
&amp;gt;   identity admin http://controller:35357/v2.0
+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | cce98996793948f8841e9e809c1fcce0 |
| interface    | admin                            |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 70c001520bc346f5a24cbce02251edc0 |
| service_name | keystone                         |
| service_type | identity                         |
| url          | http://controller:35357/v2.0     |
+--------------+----------------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;projects-users-and-roles&quot;&gt;创建projects, users, and roles&lt;/h4&gt;

&lt;p&gt;1.创建管理员用户&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 创建管理员项目
root@controller:~# openstack project create --domain default \
&amp;gt;   --description &quot;Admin Project&quot; admin
+-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | Admin Project                    |
| domain_id   | default                          |
| enabled     | True                             |
| id          | ae557b315d7c430c929f31b480084ada |
| is_domain   | False                            |
| name        | admin                            |
| parent_id   | None                             |
+-------------+----------------------------------+

# 创建admin账户
root@controller:~# openstack user create --domain default \
&amp;gt;   --password-prompt admin
User Password:
Repeat User Password:
+-----------+----------------------------------+
| Field     | Value                            |
+-----------+----------------------------------+
| domain_id | default                          |
| enabled   | True                             |
| id        | 59a21d5fea5a42908d5911635eb92742 |
| name      | admin                            |
+-----------+----------------------------------+

# 创建admin角色
root@controller:~# openstack role create admin
+-------+----------------------------------+
| Field | Value                            |
+-------+----------------------------------+
| id    | 28754433fefd4572be420fcf91be7788 |
| name  | admin                            |
+-------+----------------------------------+

# 添加权限
root@controller:~# openstack role add --project admin --user admin admin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.创建service项目&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@controller:~# openstack project create --domain default \
&amp;gt;   --description &quot;Service Project&quot; service
+-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | Service Project                  |
| domain_id   | default                          |
| enabled     | True                             |
| id          | c0f3b4ac140e4d98a4ec87adbfb54c60 |
| is_domain   | False                            |
| name        | service                          |
| parent_id   | None                             |
+-------------+----------------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.创建普通用户&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 创建demo项目
root@controller:~# openstack project create --domain default \
&amp;gt;   --description &quot;Demo Project&quot; demo
+-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | Demo Project                     |
| domain_id   | default                          |
| enabled     | True                             |
| id          | 89149a8b334a4a05bf50772944d41dad |
| is_domain   | False                            |
| name        | demo                             |
| parent_id   | None                             |
+-------------+----------------------------------+

# 创建demo用户
root@controller:~# openstack user create --domain default \
&amp;gt;   --password-prompt demo
User Password:
Repeat User Password:
+-----------+----------------------------------+
| Field     | Value                            |
+-----------+----------------------------------+
| domain_id | default                          |
| enabled   | True                             |
| id        | c86e83459c21400c9092e4b68aac0e6e |
| name      | demo                             |
+-----------+----------------------------------+

# 创建user角色
root@controller:~# openstack role create user
+-------+----------------------------------+
| Field | Value                            |
+-------+----------------------------------+
| id    | 48b053ac809d48d58b0032e52be9d057 |
| name  | user                             |
+-------+----------------------------------+

# 分配角色
root@controller:~# openstack role add --project demo --user demo user
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-7&quot;&gt;验证配置&lt;/h4&gt;

&lt;p&gt;1.清除原有环境变量&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;unset OS_TOKEN OS_URL
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.使用用户名密码获取token&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@controller:~#  openstack --os-auth-url http://controller:35357/v3 \
&amp;gt;   --os-project-domain-id default --os-user-domain-id default \
&amp;gt;   --os-project-name admin --os-username admin --os-auth-type password \
&amp;gt;   token issue
Password:
+------------+----------------------------------+
| Field      | Value                            |
+------------+----------------------------------+
| expires    | 2016-03-24T11:06:17.423633Z      |
| id         | d55f1ceaabf14b93aef5516c497c2d7e |
| project_id | ae557b315d7c430c929f31b480084ada |
| user_id    | 59a21d5fea5a42908d5911635eb92742 |
+------------+----------------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;openstack-2&quot;&gt;创建openstack命令行证书文件&lt;/h4&gt;

&lt;p&gt;新建文件admin-openrc.sh，并添加如下内容：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export OS_PROJECT_DOMAIN_ID=default
export OS_USER_DOMAIN_ID=default
export OS_PROJECT_NAME=admin
export OS_TENANT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=root #根据实际填写
export OS_AUTH_URL=http://controller:35357/v3
export OS_IDENTITY_API_VERSION=3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;glance&quot;&gt;安装镜像服务glance&lt;/h3&gt;

&lt;h4 id=&quot;section-8&quot;&gt;基础配置准备&lt;/h4&gt;

&lt;p&gt;1.进入数据库服务创建glance数据库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 创建glance数据库
CREATE DATABASE glance;

分配相应的访问权限
GRANT ALL PRIVILEGES ON glance.* TO &#39;glance&#39;@&#39;localhost&#39; \
  IDENTIFIED BY &#39;root&#39;;
GRANT ALL PRIVILEGES ON glance.* TO &#39;glance&#39;@&#39;%&#39; \
  IDENTIFIED BY &#39;root&#39;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.source证书文件admin-openrc.sh&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@controller:~# source admin-openrc.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.在keystone中创建glance用户信息&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 创建glance用户
root@controller:~# openstack user create --domain default --password-prompt glance
User Password:
Repeat User Password:
+-----------+----------------------------------+
| Field     | Value                            |
+-----------+----------------------------------+
| domain_id | default                          |
| enabled   | True                             |
| id        | dc680f9b12e44ebb93c91dfdeeabcb8f |
| name      | glance                           |
+-----------+----------------------------------+

# 为glance用户在service项目添加admin权限
root@controller:~# openstack role add --project service --user glance admin

# 创建glance服务
root@controller:~# openstack service create --name glance \
&amp;gt;   --description &quot;OpenStack Image service&quot; image

+-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | OpenStack Image service          |
| enabled     | True                             |
| id          | 0fc59e7791d9463085c7f84a39c1f3c8 |
| name        | glance                           |
| type        | image                            |
+-------------+----------------------------------+

# 创建镜像服务endpoint
root@controller:~# openstack endpoint create --region RegionOne \
&amp;gt;   image public http://controller:9292
+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 9c34be6312974f9dabc8783816771103 |
| interface    | public                           |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 0fc59e7791d9463085c7f84a39c1f3c8 |
| service_name | glance                           |
| service_type | image                            |
| url          | http://controller:9292           |
+--------------+----------------------------------+

root@controller:~# openstack endpoint create --region RegionOne \
&amp;gt;   image internal http://controller:9292
+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | a6f97076343248ec98ec7a800ec94577 |
| interface    | internal                         |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 0fc59e7791d9463085c7f84a39c1f3c8 |
| service_name | glance                           |
| service_type | image                            |
| url          | http://controller:9292           |
+--------------+----------------------------------+

root@controller:~#  openstack endpoint create --region RegionOne \
&amp;gt;   image admin http://controller:9292
+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | e01dbccee82a406e8deaae02b6590b44 |
| interface    | admin                            |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 0fc59e7791d9463085c7f84a39c1f3c8 |
| service_name | glance                           |
| service_type | image                            |
| url          | http://controller:9292           |
+--------------+----------------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;glance-1&quot;&gt;安装配置glance软件包&lt;/h4&gt;

&lt;p&gt;1.安装软件包&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install glance python-glanceclient
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.修改配置文件/etc/glance/glance-api.conf和/etc/glance/glance-registry.conf&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 修改文件/etc/glance/glance-api.conf
[database]
...
connection = mysql+pymysql://glance:GLANCE_DBPASS@controller/glance

[keystone_authtoken]
...
auth_uri = http://controller:5000
auth_url = http://controller:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = service
username = glance
password = root

[paste_deploy]
...
flavor = keystone

[glance_store]
...
default_store = file
filesystem_store_datadir = /var/lib/glance/images/

[DEFAULT]
...
notification_driver = noop
verbose = True

===============================================================

# 修改配置文件/etc/glance/glance-registry.conf
[database]
...
connection = mysql+pymysql://glance:root@controller/glance

[keystone_authtoken]
...
auth_uri = http://controller:5000
auth_url = http://controller:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = service
username = glance
password = root

[paste_deploy]
...
flavor = keystone

[DEFAULT]
...
notification_driver = noop
verbose = True
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.同步glance数据库并重启服务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 同步数据库
su -s /bin/sh -c &quot;glance-manage db_sync&quot; glance
# 重启服务
service glance-registry restart
service glance-api restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;p&lt;/p&gt;

&lt;h4 id=&quot;glance-2&quot;&gt;验证glance服务&lt;/h4&gt;

&lt;p&gt;1.将镜像版本信息写入证书文件admin-openrc.sh&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo &quot;export OS_IMAGE_API_VERSION=2&quot; \
  | tee -a admin-openrc.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.source文件admin-openrc.sh&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source admin-openrc.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.下载测试镜像&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;4.在glance创建镜像&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 创建镜像
root@controller:~# glance image-create --name &quot;cirros&quot; \
&amp;gt;   --file cirros-0.3.4-x86_64-disk.img \
&amp;gt;   --disk-format qcow2 --container-format bare \
&amp;gt;   --visibility public --progress
[=============================&amp;gt;] 100%
+------------------+--------------------------------------+
| Property         | Value                                |
+------------------+--------------------------------------+
| checksum         | ee1eca47dc88f4879d8a229cc70a07c6     |
| container_format | bare                                 |
| created_at       | 2016-03-25T06:23:07Z                 |
| disk_format      | qcow2                                |
| id               | 67cfd037-5704-4432-9b2c-cf5fffdb6319 |
| min_disk         | 0                                    |
| min_ram          | 0                                    |
| name             | cirros                               |
| owner            | ae557b315d7c430c929f31b480084ada     |
| protected        | False                                |
| size             | 13287936                             |
| status           | active                               |
| tags             | []                                   |
| updated_at       | 2016-03-25T06:23:08Z                 |
| virtual_size     | None                                 |
| visibility       | public                               |
+------------------+--------------------------------------+
]]

# 查看镜像
root@controller:~# glance image-list
+--------------------------------------+--------+
| ID                                   | Name   |
+--------------------------------------+--------+
| 67cfd037-5704-4432-9b2c-cf5fffdb6319 | cirros |
+--------------------------------------+--------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;nova&quot;&gt;安装计算服务Nova&lt;/h3&gt;

&lt;h4 id=&quot;section-9&quot;&gt;安装控制节点&lt;/h4&gt;

&lt;h5 id=&quot;section-10&quot;&gt;前期准备&lt;/h5&gt;

&lt;p&gt;1.创建nova数据库，并分配权限&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 创建数据库
CREATE DATABASE nova;

# 分配访问权限
GRANT ALL PRIVILEGES ON nova.* TO &#39;nova&#39;@&#39;localhost&#39; \
  IDENTIFIED BY &#39;NOVA_DBPASS&#39;;
GRANT ALL PRIVILEGES ON nova.* TO &#39;nova&#39;@&#39;%&#39; \
  IDENTIFIED BY &#39;NOVA_DBPASS&#39;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.在keystone中创建nova用户,服务以及endpoint&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 创建账户
root@controller:~# openstack user create --domain default --password-prompt nova
User Password:
Repeat User Password:
+-----------+----------------------------------+
| Field     | Value                            |
+-----------+----------------------------------+
| domain_id | default                          |
| enabled   | True                             |
| id        | 77a5b14032ed484ebeefa981e1c0ac00 |
| name      | nova                             |
+-----------+----------------------------------+

# 给nova添加admin权限
root@controller:~# openstack role add --project service --user nova admin

# 创建nova服务
root@controller:~# openstack service create --name nova \
&amp;gt;   --description &quot;OpenStack Compute&quot; compute
+-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | OpenStack Compute                |
| enabled     | True                             |
| id          | 023a040a53b44ff69cb9d5d8f210323b |
| name        | nova                             |
| type        | compute                          |
+-------------+----------------------------------+

# 添加endpoint
root@controller:~# openstack endpoint create --region RegionOne \
&amp;gt;   compute public http://controller:8774/v2/%\(tenant_id\)s
+--------------+-----------------------------------------+
| Field        | Value                                   |
+--------------+-----------------------------------------+
| enabled      | True                                    |
| id           | df485e2cbf9b414ab57be9d9a0d9b253        |
| interface    | public                                  |
| region       | RegionOne                               |
| region_id    | RegionOne                               |
| service_id   | 023a040a53b44ff69cb9d5d8f210323b        |
| service_name | nova                                    |
| service_type | compute                                 |
| url          | http://controller:8774/v2/%(tenant_id)s |
+--------------+-----------------------------------------+

root@controller:~# openstack endpoint create --region RegionOne \
&amp;gt;   compute internal http://controller:8774/v2/%\(tenant_id\)s
+--------------+-----------------------------------------+
| Field        | Value                                   |
+--------------+-----------------------------------------+
| enabled      | True                                    |
| id           | bf83399e62c0481593d3c923ddce2820        |
| interface    | internal                                |
| region       | RegionOne                               |
| region_id    | RegionOne                               |
| service_id   | 023a040a53b44ff69cb9d5d8f210323b        |
| service_name | nova                                    |
| service_type | compute                                 |
| url          | http://controller:8774/v2/%(tenant_id)s |
+--------------+-----------------------------------------+

root@controller:~# openstack endpoint create --region RegionOne \
&amp;gt;   compute admin http://controller:8774/v2/%\(tenant_id\)s
+--------------+-----------------------------------------+
| Field        | Value                                   |
+--------------+-----------------------------------------+
| enabled      | True                                    |
| id           | 1a3972fe66f243b08bbc5e98e27b3110        |
| interface    | admin                                   |
| region       | RegionOne                               |
| region_id    | RegionOne                               |
| service_id   | 023a040a53b44ff69cb9d5d8f210323b        |
| service_name | nova                                    |
| service_type | compute                                 |
| url          | http://controller:8774/v2/%(tenant_id)s |
+--------------+-----------------------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;nova-1&quot;&gt;安装nova软件包并配置&lt;/h5&gt;

&lt;p&gt;1.安装软件包&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; apt-get install nova-api nova-cert nova-conductor \
   nova-consoleauth nova-novncproxy nova-scheduler \
     python-novaclient
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.编辑配置文件/etc/nova/nova.conf 修改以下配置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[database]
...
connection = mysql+pymysql://nova:root@controller/nova

[DEFAULT]
...
rpc_backend = rabbit

[oslo_messaging_rabbit]
...
rabbit_host = controller
rabbit_userid = openstack
rabbit_password = root
...
auth_strategy = keystone
...
my_ip = 192.168.2.2

...
network_api_class = nova.network.neutronv2.api.API
security_group_api = neutron
linuxnet_interface_driver = nova.network.linux_net.NeutronLinuxBridgeInterfaceDriver
firewall_driver = nova.virt.firewall.NoopFirewallDriver

...
enabled_apis=osapi_compute,metadata

...
verbose = True

[keystone_authtoken]
...
auth_uri = http://controller:5000
auth_url = http://controller:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = service
username = nova
password = root

[vnc]
...
vncserver_listen = $my_ip
vncserver_proxyclient_address = $my_ip

[glance]
...
host = controller

[oslo_concurrency]
...
lock_path = /var/lib/nova/tmp
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.同步数据库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;su -s /bin/sh -c &quot;nova-manage db sync&quot; nova
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;4.重启nova服务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;service nova-api restart
service nova-cert restart
service nova-consoleauth restart
service nova-scheduler restart
service nova-conductor restart
service nova-novncproxy restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-11&quot;&gt;安装计算节点&lt;/h3&gt;

&lt;p&gt;1.安装软件包&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install nova-compute sysfsutils
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.修改配置文件/etc/nova/nova.conf&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[DEFAULT]
...
rpc_backend = rabbit
...
auth_strategy = keystone
...
my_ip = 192.168.2.2 # compute节点的ip地址
...
network_api_class = nova.network.neutronv2.api.API
security_group_api = neutron
linuxnet_interface_driver = nova.network.linux_net.NeutronLinuxBridgeInterfaceDriver
firewall_driver = nova.virt.firewall.NoopFirewallDriver
...
verbose = True

[oslo_messaging_rabbit]
...
rabbit_host = controller
rabbit_userid = openstack
rabbit_password = root

[keystone_authtoken]
...
auth_uri = http://controller:5000
auth_url = http://controller:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = service
username = nova
password = root

[vnc]
...
enabled = True
vncserver_listen = 0.0.0.0
vncserver_proxyclient_address = $my_ip
novncproxy_base_url = http://controller:6080/vnc_auto.html

[glance]
...
host = controller

[oslo_concurrency]
...
lock_path = /var/lib/nova/tmp
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.验证是否支持虚拟化&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 执行以下命令如果返回０则表示不支持
egrep -c &#39;(vmx|svm)&#39; /proc/cpuinfo

# 我们的环境是在虚拟化环境中所以肯定不支持再次虚拟化，所以需要在/etc/nova/nova-compute.conf中做如下配置
[libvirt]
...
virt_type = qemu # 如果支持的话可以设置为kvm
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;4.重启nova compute服务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;service nova-compute restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-12&quot;&gt;验证服务&lt;/h3&gt;

&lt;p&gt;在控制节点执行以下命令&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 列出nova所有服务列表
root@controller:~# nova service-list
+----+------------------+------------+----------+---------+-------+----------------------------+-----------------+
| Id | Binary           | Host       | Zone     | Status  | State | Updated_at                 | Disabled Reason |
+----+------------------+------------+----------+---------+-------+----------------------------+-----------------+
| 1  | nova-cert        | controller | internal | enabled | up    | 2016-03-27T11:48:59.000000 | -               |
| 2  | nova-consoleauth | controller | internal | enabled | up    | 2016-03-27T11:48:59.000000 | -               |
| 3  | nova-conductor   | controller | internal | enabled | up    | 2016-03-27T11:48:59.000000 | -               |
| 4  | nova-scheduler   | controller | internal | enabled | up    | 2016-03-27T11:48:59.000000 | -               |
| 5  | nova-compute     | compute    | nova     | enabled | up    | 2016-03-27T11:48:59.000000 | -               |
+----+------------------+------------+----------+---------+-------+----------------------------+-----------------+

# 查看镜像
root@controller:~# nova image-list
+--------------------------------------+--------+--------+--------+
| ID                                   | Name   | Status | Server |
+--------------------------------------+--------+--------+--------+
| 67cfd037-5704-4432-9b2c-cf5fffdb6319 | cirros | ACTIVE |        |
+--------------------------------------+--------+--------+--------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;neutron&quot;&gt;安装网络服务neutron&lt;/h3&gt;

&lt;h4 id=&quot;section-13&quot;&gt;安装控制节点&lt;/h4&gt;

&lt;p&gt;1.创建neutron数据库并分配相应权限&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 创建数据库
CREATE DATABASE neutron;
# 分配访问权限
GRANT ALL PRIVILEGES ON neutron.* TO &#39;neutron&#39;@&#39;localhost&#39; \
  IDENTIFIED BY &#39;root&#39;;
GRANT ALL PRIVILEGES ON neutron.* TO &#39;neutron&#39;@&#39;%&#39; \
  IDENTIFIED BY &#39;root&#39;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.在keystone中创建neutron服务以及endpoint&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 创建neutron用户
root@controller:~# openstack user create --domain default --password-prompt neutron
User Password:
Repeat User Password:
+-----------+----------------------------------+
| Field     | Value                            |
+-----------+----------------------------------+
| domain_id | default                          |
| enabled   | True                             |
| id        | a8edd66b5dc64ce2b2a37cf66546297f |
| name      | neutron                          |
+-----------+----------------------------------+
# 给neutron用户分配admin权限
root@controller:~# openstack role add --project service --user neutron admin
# 创建neutron服务
root@controller:~# openstack service create --name neutron \
&amp;gt;   --description &quot;OpenStack Networking&quot; network
+-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | OpenStack Networking             |
| enabled     | True                             |
| id          | 4a3333006f844469b2ae735014a24ec9 |
| name        | neutron                          |
| type        | network                          |
+-------------+----------------------------------+
# 创建网络服务endpoint
root@controller:~# openstack endpoint create --region RegionOne \
&amp;gt;   network public http://controller:9696
+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | e7b234ba729b46cbbaa86db2df71e0f2 |
| interface    | public                           |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 4a3333006f844469b2ae735014a24ec9 |
| service_name | neutron                          |
| service_type | network                          |
| url          | http://controller:9696           |
+--------------+----------------------------------+

root@controller:~# openstack endpoint create --region RegionOne \
&amp;gt;   network internal http://controller:9696
+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | fadda1557ca846edbeab3f6f8dc79823 |
| interface    | internal                         |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 4a3333006f844469b2ae735014a24ec9 |
| service_name | neutron                          |
| service_type | network                          |
| url          | http://controller:9696           |
+--------------+----------------------------------+

root@controller:~# openstack endpoint create --region RegionOne \
&amp;gt;   network admin http://controller:9696
+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 3f9866732fd84b70bb14e00fcee597a3 |
| interface    | admin                            |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 4a3333006f844469b2ae735014a24ec9 |
| service_name | neutron                          |
| service_type | network                          |
| url          | http://controller:9696           |
+--------------+----------------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.安装neutron软件（根据Self-service网络方式）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install neutron-server neutron-plugin-ml2 \
  neutron-plugin-linuxbridge-agent neutron-l3-agent neutron-dhcp-agent \
    neutron-metadata-agent python-neutronclient conntrack
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;4.修改配置文件/etc/neutron/neutron.conf&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[database]
...
connection = mysql+pymysql://neutron:root@controller/neutron

[DEFAULT]
...
core_plugin = ml2
service_plugins = router
allow_overlapping_ips = True
...
rpc_backend = rabbit
...
auth_strategy = keystone
...
notify_nova_on_port_status_changes = True
notify_nova_on_port_data_changes = True
nova_url = http://controller:8774/v2
...
verbose = True

[oslo_messaging_rabbit]
...
rabbit_host = controller
rabbit_userid = openstack
rabbit_password = RABBIT_PASS

[keystone_authtoken]
...
auth_uri = http://controller:5000
auth_url = http://controller:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = service
username = neutron
password = NEUTRON_PASS

[nova]
...
auth_url = http://controller:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
region_name = RegionOne
project_name = service
username = nova
password = NOVA_PASS
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;5.修改配置文件/etc/neutron/plugins/ml2/ml2_conf.ini&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[ml2]
...
type_drivers = flat,vlan,vxlan
...
tenant_network_types = vxlan
...
mechanism_drivers = linuxbridge,l2population
...
extension_drivers = port_security

[ml2_type_flat]
...
flat_networks = public

[ml2_type_vxlan]
...
vni_ranges = 1:1000

[securitygroup]
...
enable_ipset = True
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;6.修改配置文件/etc/neutron/plugins/ml2/linuxbridge_agent.ini&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[linux_bridge]
physical_interface_mappings = public:eth0

[vxlan]
enable_vxlan = True
local_ip = 192.168.2.2
l2_population = True

[agent]
...
prevent_arp_spoofing = True

[securitygroup]
...
enable_security_group = True
firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;7.修改配置文件/etc/neutron/l3_agent.ini&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[DEFAULT]
...
interface_driver = neutron.agent.linux.interface.BridgeInterfaceDriver
...
verbose = True
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;8.修改配置文件/etc/neutron/dhcp_agent.ini&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[DEFAULT]
...
interface_driver = neutron.agent.linux.interface.BridgeInterfaceDriver
dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq
enable_isolated_metadata = True
...
verbose = True
...
dnsmasq_config_file = /etc/neutron/dnsmasq-neutron.conf

# 创建文件/etc/neutron/dnsmasq-neutron.conf并写入如下内容
dhcp-option-force=26,1450
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;9.修改配置文件/etc/neutron/metadata_agent.ini&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[DEFAULT]
...
auth_uri = http://controller:5000
auth_url = http://controller:35357
auth_region = RegionOne
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = service
username = neutron
password = root
...
nova_metadata_ip = controller
...
metadata_proxy_shared_secret = root
...
verbose = True
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;10.修改配置文件/etc/nova/nova.conf&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[neutron]
...
url = http://controller:9696
auth_url = http://controller:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
region_name = RegionOne
project_name = service
username = neutron
password = root

service_metadata_proxy = True
metadata_proxy_shared_secret = root
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;11.同步数据库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;su -s /bin/sh -c &quot;neutron-db-manage --config-file /etc/neutron/neutron.conf \
  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head&quot; neutron
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;12.重启服务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 重启nova
service nova-api restart
# 重启neutron
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-14&quot;&gt;安装计算节点&lt;/h4&gt;

&lt;p&gt;1.安装软件包&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install neutron-plugin-linuxbridge-agent conntrack
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.修改配置文件/etc/neutron/neutron.conf&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[DEFAULT]
...
rpc_backend = rabbit
...
auth_strategy = keystone
...
verbose = True

[oslo_messaging_rabbit]
...
rabbit_host = controller
rabbit_userid = openstack
rabbit_password = root

[keystone_authtoken]
...
auth_uri = http://controller:5000
auth_url = http://controller:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = service
username = neutron
password = root
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.修改配置文件/etc/neutron/plugins/ml2/linuxbridge_agent.ini&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[linux_bridge]
physical_interface_mappings = public:eth0

[vxlan]
enable_vxlan = True
local_ip = 192.168.2.6
l2_population = True

[agent]
...
prevent_arp_spoofing = True

[securitygroup]
...
enable_security_group = True
firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;4.修改配置文件/etc/nova/nova.conf&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[neutron]
...
url = http://controller:9696
auth_url = http://controller:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
region_name = RegionOne
project_name = service
username = neutron
password = root
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;5.重启服务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 重启nova-compute
service nova-compute restart
# 重启网络服务
service neutron-plugin-linuxbridge-agent restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;6.验证&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 验证是否成功加载插件
root@controller:~# neutron ext-list
+-----------------------+-----------------------------------------------+
| alias                 | name                                          |
+-----------------------+-----------------------------------------------+
| dns-integration       | DNS Integration                               |
| ext-gw-mode           | Neutron L3 Configurable external gateway mode |
| binding               | Port Binding                                  |
| agent                 | agent                                         |
| subnet_allocation     | Subnet Allocation                             |
| l3_agent_scheduler    | L3 Agent Scheduler                            |
| external-net          | Neutron external network                      |
| flavors               | Neutron Service Flavors                       |
| net-mtu               | Network MTU                                   |
| quotas                | Quota management support                      |
| l3-ha                 | HA Router extension                           |
| provider              | Provider Network                              |
| multi-provider        | Multi Provider Network                        |
| extraroute            | Neutron Extra Route                           |
| router                | Neutron L3 Router                             |
| extra_dhcp_opt        | Neutron Extra DHCP opts                       |
| security-group        | security-group                                |
| dhcp_agent_scheduler  | DHCP Agent Scheduler                          |
| rbac-policies         | RBAC Policies                                 |
| port-security         | Port Security                                 |
| allowed-address-pairs | Allowed Address Pairs                         |
| dvr                   | Distributed Virtual Router                    |
+-----------------------+-----------------------------------------------+
# 验证neutron agents是否正确
root@controller:~# neutron agent-list
+--------------------------------------+--------------------+------------+-------+----------------+---------------------------+
| id                                   | agent_type         | host       | alive | admin_state_up | binary                    |
+--------------------------------------+--------------------+------------+-------+----------------+---------------------------+
| 28e6e70f-063e-433a-943f-ded82ec083fb | Metadata agent     | controller | :-)   | True           | neutron-metadata-agent    |
| 2abdf6a3-f0cd-4a3e-87a3-def58f03aeba | Linux bridge agent | controller | :-)   | True           | neutron-linuxbridge-agent |
| 5e78f457-95f6-4e95-929d-268d35f49037 | DHCP agent         | controller | :-)   | True           | neutron-dhcp-agent        |
| 82c1d9fa-a906-45fc-9a56-56390c8a35fb | L3 agent           | controller | :-)   | True           | neutron-l3-agent          |
| dbbb522e-a424-4606-8a69-77250154e5d3 | Linux bridge agent | compute    | :-)   | True           | neutron-linuxbridge-agent |
+--------------------------------------+--------------------+------------+-------+----------------+---------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;horizon&quot;&gt;安装面板服务horizon&lt;/h3&gt;

&lt;p&gt;1.安装horizon软件包&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install openstack-dashboard
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.修改配置文件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;OPENSTACK_HOST = &quot;controller&quot;
ALLOWED_HOSTS = [&#39;*&#39;, ]
CACHES = {
    &#39;default&#39;: {
        &#39;BACKEND&#39;: &#39;django.core.cache.backends.memcached.MemcachedCache&#39;,
        &#39;LOCATION&#39;: &#39;127.0.0.1:11211&#39;,
    }
}
OPENSTACK_KEYSTONE_DEFAULT_ROLE = &quot;user&quot;
OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = True
OPENSTACK_API_VERSIONS = {
    &quot;identity&quot;: 3,
    &quot;volume&quot;: 2,
}
OPENSTACK_NEUTRON_NETWORK = {
    &#39;enable_router&#39;: False,
    &#39;enable_quotas&#39;: False,
    &#39;enable_distributed_router&#39;: False,
    &#39;enable_ha_router&#39;: False,
    &#39;enable_lb&#39;: False,
    &#39;enable_firewall&#39;: False,
    &#39;enable_vpn&#39;: False,
    &#39;enable_fip_topology_check&#39;: False,
}
TIME_ZONE = &quot;TIME_ZONE&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.验证面板&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;登入面板测试面板可用性
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 27 Mar 2016 17:00:13 +0800</pubDate>
        <link>http://www.pisces.ml/articles/openstack/20160328</link>
        <guid isPermaLink="true">http://www.pisces.ml/articles/openstack/20160328</guid>
        
        
        <category>openstack</category>
        
      </item>
    
      <item>
        <title>DNS域名含义解析</title>
        <description>&lt;p&gt;域名注册完成后首先需要做域名解析，域名解析就是把域名指向网站所在服务器的IP，让人们通过注册的域名可以访问到网站。IP地址是网络上标识服务器的数字地址，为了方便记忆，使用域名来代替IP地址。域名解析就是域名到IP地址的转换过程，域名的解析工作由DNS服务器完成。DNS服务器会把域名解析到一个IP地址，然后在此IP地址的主机上将一个子目录与域名绑定。域名解析时会添加解析记录，这些记录有：A记录、AAAA记录、CNAME记录、MX记录、NS记录、TXT记录、SRV记录、URL转发。&lt;/p&gt;

&lt;h2 id=&quot;dns&quot;&gt;DNS域名解析记录&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;A记录&lt;/strong&gt;： 将域名指向一个IPv4地址（例如：100.100.100.100），需要增加A记录&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CNAME记录&lt;/strong&gt;： 如果将域名指向一个域名，实现与被指向域名相同的访问效果，需要增加CNAME记录。这个域名一般是主机服务商提供的一个域名&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MX记录&lt;/strong&gt;： 建立电子邮箱服务，将指向邮件服务器地址，需要设置MX记录。建立邮箱时，一般会根据邮箱服务商提供的MX记录填写此记录&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NS记录&lt;/strong&gt;： 域名解析服务器记录，如果要将子域名指定某个域名服务器来解析，需要设置NS记录&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TXT记录&lt;/strong&gt;： 可任意填写，可为空。一般做一些验证记录时会使用此项，如：做SPF（反垃圾邮件）记录&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AAAA记录&lt;/strong&gt;： 将主机名（或域名）指向一个IPv6地址（例如：ff03:0:0:0:0:0:0:c1），需要添加AAAA记录&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SRV记录&lt;/strong&gt;： 添加服务记录服务器服务记录时会添加此项，SRV记录了哪台计算机提供了哪个服务。格式为：服务的名字.协议的类型（例如：_example-server._tcp）。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SOA记录&lt;/strong&gt;： SOA叫做起始授权机构记录，NS用于标识多台域名解析服务器，SOA记录用于在众多NS记录中那一台是主服务器&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PTR记录&lt;/strong&gt;： PTR记录是A记录的逆向记录，又称做IP反查记录或指针记录，负责将IP反向解析为域名&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;显性URL转发记录&lt;/strong&gt;： 将域名指向一个http(s)协议地址，访问域名时，自动跳转至目标地址。例如：将www.liuht.cn显性转发到www.itbilu.com后，访问www.liuht.cn时，地址栏显示的地址为：www.itbilu.com。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;隐性UR转发记录&lt;/strong&gt;： 将域名指向一个http(s)协议地址，访问域名时，自动跳转至目标地址，隐性转发会隐藏真实的目标地址。例如：将www.liuht.cn显性转发到www.itbilu.com后，访问www.liuht.cn时，地址栏显示的地址仍然是：www.picses.ga。&lt;/p&gt;

&lt;h2 id=&quot;dns-1&quot;&gt;DNS解析中的问题&lt;/h2&gt;

&lt;h3 id=&quot;acname&quot;&gt;A记录与CNAME记录&lt;/h3&gt;

&lt;p&gt;A记录是把一个域名解析到一个IP地址，而CNAME记录是把域名解析到另外一个域名，而这个域名最终会指向一个A记录，在功能实现在上A记录与CNAME记录没有区别。&lt;/p&gt;

&lt;p&gt;CNAME记录在做IP地址变更时要比A记录方便。CNAME记录允许将多个名字映射到同一台计算机，当有多个域名需要指向同一服务器IP，此时可以将一个域名做A记录指向服务器IP，然后将其他的域名做别名(即：CNAME)到A记录的域名上。当服务器IP地址变更时，只需要更改A记录的那个域名到新IP上，其它做别名的域名会自动更改到新的IP地址上，而不必对每个域名做更改。&lt;/p&gt;

&lt;h3 id=&quot;aaaaa&quot;&gt;A记录与AAAA记录&lt;/h3&gt;

&lt;p&gt;二者都是指向一个IP地址，但对应的IP版本不同。A记录指向IPv4地址，AAAA记录指向IPv6地址。AAAA记录是A记录的升级版本。&lt;/p&gt;

&lt;h3 id=&quot;ipv4ipv6&quot;&gt;IPv4与IPv6&lt;/h3&gt;

&lt;p&gt;IPv4，是互联网协议（Internet Protocol，IP）的第四版，也是第一个被广泛使用的版本，是构成现今互联网技术的基础协议。IPv4 的下一个版本就是IPv6，在将来将取代目前被广泛使用的IPv4。&lt;/p&gt;

&lt;p&gt;IPv4中规定IP地址长度为32位（按TCP/IP参考模型划分) ，即有2^32-1个地址。IPv6的提出最早是为了解决，随着互联网的迅速发展IPv4地址空间将被耗尽的问题。为了扩大地址空间，IPv6将IP地址的长度由32位增加到了128位。在IPv6的设计过程中除了一劳永逸地解决了地址短缺问题以外，还解决了IPv4中的其它问题，如：端到端IP连接、服务质量（QoS）、安全性、多播、移动性、即插即用等。&lt;/p&gt;

&lt;h3 id=&quot;ttl&quot;&gt;TTL值&lt;/h3&gt;

&lt;p&gt;TTL－生存时间（Time To Live），表示解析记录在DNS服务器中的缓存时间，TTL的时间长度单位是秒，一般为3600秒。比如：在访问www.itbilu.com时，如果在DNS服务器的缓存中没有该记录，就会向某个NS服务器发出请求，获得该记录后，该记录会在DNS服务器上保存TTL的时间长度，在TTL有效期内访问www.itbilu.com，DNS服务器会直接缓存中返回刚才的记录。&lt;/p&gt;
</description>
        <pubDate>Tue, 22 Mar 2016 17:00:13 +0800</pubDate>
        <link>http://www.pisces.ml/articles/2016322</link>
        <guid isPermaLink="true">http://www.pisces.ml/articles/2016322</guid>
        
        
        <category>知识梳理</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll and EasyBook</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;GitHub Flavored Markdown is supported.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;easybook-advanced-functions&quot;&gt;EasyBook Advanced Functions&lt;/h2&gt;

&lt;p&gt;You are using &lt;a href=&quot;https://github.com/laobubu/jekyll-theme-EasyBook&quot;&gt;EasyBook&lt;/a&gt; the template from &lt;a href=&quot;http://laobubu.net&quot;&gt;laobubu.net&lt;/a&gt;. Therefore some features are supported now:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Pagination&lt;/strong&gt; is enabled.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Disqus&lt;/strong&gt; or &lt;strong&gt;多说&lt;/strong&gt; is ready.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;TOC&lt;/strong&gt; for posts is enabled.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Profile&lt;/strong&gt; including your links and avatar on the sidebar.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;And more…&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Tips:&lt;/strong&gt; You can disable Disqus or 多说 on posts/pages by adding &lt;code class=&quot;highlighter-rouge&quot;&gt;nocomments: true&lt;/code&gt; into &lt;a href=&quot;http://jekyllrb.com/docs/frontmatter/&quot;&gt;YAML Front Matter&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;EasyBook uses upaiyun CDN to make everyone lncluding Chinese visitors feel speedy. You can find it in &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/footer.html&lt;/code&gt; and change it to your favorite CDN like Google CDN.&lt;/p&gt;

&lt;h2 id=&quot;support-me-by&quot;&gt;Support me by…&lt;/h2&gt;

&lt;h3 id=&quot;add-a-link&quot;&gt;Add a link&lt;/h3&gt;

&lt;p&gt;EasyBook does not make the footer heavy; the link to theme could be on &lt;code class=&quot;highlighter-rouge&quot;&gt;about.md&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This website is using &lt;a href=&quot;http://laobubu.net&quot;&gt;laobubu&lt;/a&gt;’s theme: &lt;a href=&quot;https://github.com/laobubu/jekyll-theme-EasyBook&quot;&gt;EasyBook&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;donate-paypal-or-&quot;&gt;Donate (PayPal or 支付宝)&lt;/h3&gt;

&lt;p&gt;That’s the best :smile:&lt;/p&gt;

&lt;p&gt;Please visit &lt;a href=&quot;http://laobubu.net/donate.html&quot;&gt;http://laobubu.net/donate.html&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;star-and-fork-on-github-free&quot;&gt;Star and Fork on GitHub (free)&lt;/h3&gt;

&lt;p&gt;Not going to donate? That’s okay. You can also send out your precious star &lt;a href=&quot;https://github.com/laobubu/jekyll-theme-EasyBook&quot;&gt;on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;and-here-we-go&quot;&gt;And Here We Go&lt;/h2&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Tue, 30 Dec 2014 17:00:13 +0800</pubDate>
        <link>http://www.pisces.ml/archivers/hello</link>
        <guid isPermaLink="true">http://www.pisces.ml/archivers/hello</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>Style Test</title>
        <description>&lt;p&gt;This is just a style test post, filled with LoremIpsue. Feel free to delete the file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://lorempixel.com/400/200/&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;lorem-ipsum-dolor&quot;&gt;Lorem ipsum dolor&lt;/h1&gt;

&lt;p&gt;Sit amet, consectetur adipiscing elit. Phasellus nisi odio, scelerisque vitae volutpat non, facilisis non erat. In gravida placerat pulvinar. Maecenas ac pretium sem. In consectetur nulla leo, ut maximus nisi volutpat eget. Vestibulum vitae malesuada risus, egestas placerat felis. In sed sollicitudin elit. Sed bibendum porttitor dui.&lt;/p&gt;

&lt;h2 id=&quot;condimentum-mauris-accumsan&quot;&gt;Condimentum mauris Accumsan&lt;/h2&gt;

&lt;p&gt;Eu. Suspendisse scelerisque, orci vel elementum accumsan, sem turpis congue justo, et vulputate lacus orci vel felis. Pellentesque at gravida felis, vitae pretium erat. Pellentesque convallis mi vitae lectus semper, quis pellentesque lectus tristique.&lt;/p&gt;

&lt;h2 id=&quot;duis-a-nibh-in&quot;&gt;Duis a nibh in&lt;/h2&gt;

&lt;p&gt;Consectetur ultrices. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Vivamus placerat, tortor et aliquam porttitor, risus mi dapibus neque, vitae vulputate urna.
– Lorem&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Apurus vel sapien. Fusce at condimentum nibh.&lt;/p&gt;

&lt;h3 id=&quot;donec-ut-urna&quot;&gt;Donec ut urna&lt;/h3&gt;

&lt;p&gt;A dolor rhoncus posuere vel porttitor tortor. Integer ex lacus, sagittis ac tellus et, laoreet condimentum massa.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://lorempixel.com/400/400/&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Aliquam tempor pharetra lacus, vel bibendum purus dapibus nec. Integer hendrerit massa ut libero euismod, id gravida neque facilisis.&lt;/p&gt;

&lt;h2 id=&quot;nunc-nec&quot;&gt;Nunc nec&lt;/h2&gt;

&lt;p&gt;Karan justo id turpis auctor pharetra. Fusce pretium ornare facilisis. Aliquam eget scelerisque ex, eu volutpat leo. Proin pharetra est felis, sit amet suscipit orci mattis quis.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Etiam bibendum purus tincidunt&lt;/li&gt;
  &lt;li&gt;As dapibus enim et, porta ligula.&lt;/li&gt;
  &lt;li&gt;Morbi tempus, mauris sed sodales auctor, nulla erat fringilla purus, vel sodales nulla nunc sit amet purus.&lt;/li&gt;
  &lt;li&gt;Praesent pellentesque urna et leo eleifend molestie ac ac ex.&lt;/li&gt;
  &lt;li&gt;Ut eu sagittis metus, et malesuada libero.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Etiam placerat mauris a libero tempus facilisis. Maecenas ut augue lacinia, ornare mi in, lobortis arcu. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis justo elit, blandit vel tincidunt ac, imperdiet ut neque.&lt;/p&gt;

&lt;h1 id=&quot;class-aptent&quot;&gt;Class aptent&lt;/h1&gt;

&lt;p&gt;taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Aliquam erat volutpat. Sed at semper sem. Morbi in finibus tellus. Pellentesque nec dapibus risus.&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt; 
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello world!&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;vitae erat non congue. Proin sagittis vitae justo at cursus. Phasellus egestas bibendum urna vel condimentum.&lt;/p&gt;

&lt;h2 id=&quot;fusce-a-ullamcorper-nisl&quot;&gt;Fusce a ullamcorper nisl&lt;/h2&gt;

&lt;p&gt;Pellentesque vehicula faucibus nibh, &lt;strong&gt;a pharetra odio pretium ac.&lt;/strong&gt; Mauris eget gravida orci, vitae tincidunt urna. Integer pharetra ante in porta maximus. Morbi ac arcu lacinia, posuere mauris vitae, lobortis dui. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc vitae metus nibh. Cras quis malesuada nisi. Ut porttitor, ipsum vel suscipit posuere, elit purus egestas velit, ac lobortis urna orci nec mi.&lt;/p&gt;

&lt;h2 id=&quot;maecenas-bibendum-nisi&quot;&gt;Maecenas bibendum nisi&lt;/h2&gt;

&lt;p&gt;Aleo facilisis porttitor ac ac metus. &lt;strong&gt;Vivamus faucibus faucibus bibendum.&lt;/strong&gt; Donec efficitur consectetur erat quis porttitor. Ut id euismod nunc. Sed venenatis eleifend suscipit. Donec magna purus, porta eget enim a, ornare porttitor nibh. Cras nisl nibh, viverra vitae magna quis, hendrerit facilisis sem.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;table&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;test&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;lorem&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Praesent ultrices&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;convallis lorem&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;at sollicitudin enim&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Mauris&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;tristique cursus&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;arcu ac&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;facilisis&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Proin&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;vulputate neque lectus&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;maximus malesuada est rutrum ac. Sed blandit semper faucibus. Nam venenatis consectetur malesuada. Nulla lacus purus, ultrices ac eros porttitor, finibus sodales augue. Suspendisse tincidunt, felis in placerat euismod, libero nulla interdum nisl, commodo efficitur felis dui in libero. Integer lobortis sapien sit amet orci tristique auctor a sit amet neque. Nunc tincidunt iaculis purus eget maximus. Fusce risus justo, rutrum at magna sed, rhoncus lacinia lectus. Vivamus lobortis odio ex, ac vehicula nunc facilisis non. Aliquam fermentum diam massa. Sed cursus, nisi varius laoreet aliquet, tortor urna porta turpis, in dictum urna enim vel leo. Etiam at lacus lorem. Vivamus ornare vitae nisl vel malesuada.&lt;/p&gt;

</description>
        <pubDate>Thu, 01 Jan 1970 08:00:00 +0800</pubDate>
        <link>http://www.pisces.ml/archivers/test</link>
        <guid isPermaLink="true">http://www.pisces.ml/archivers/test</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
